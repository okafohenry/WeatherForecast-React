{"version":3,"sources":["loading_img.gif","nav.js","entry.js","loading_icon.js","day.js","icon.js","location.js","overlay.js","tempmax.js","tempmin.js","weatherdisplay.js","det-day.js","description.js","time.js","return.js","WeatherDetail.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","_ref","value","react_default","a","createElement","className","Entry","props","placeholder","type","onChange","handleChange","onClick","handleClick","LoadingIcon","src","Loading","alt","Day","day","Icon","icon","concat","Location","location","Overlay","TempMax","temp","TempMin","WeatherDisplay","handleDay","Date","getDay","src_location","reports","filter","report","i","map","react_router_dom","to","dt","key","src_day","src_icon","weather","tempmax","main","temp_max","tempmin","temp_min","overlay","DetDay","det_day","Description","desc","Time","time","Return","WeatherDetail","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","details","loading","dayName","dateTime","minTemp","maxTemp","weathDesc","id","_this2","setState","axios","get","then","response","list","length","match","params","nameOfDay","dt_txt","substr","description","push","catch","error","console","log","src_det_day","loading_icon","detail","src_time","src_return","React","Component","WeatherForecast","bind","assertThisInitialized","event","target","more_info","city","name","_this3","nav","entry","react_router","path","exact","render","weatherdisplay","assign","src_WeatherDetail","ReactDOM","src_WeatherForecast","document","getElementById"],"mappings":"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","file":"static/js/main.226aa620.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading_img.f12d8a99.gif\";","import React from 'react';\r\n\r\nconst Nav = ({value}) => ( \r\n\t<div className=\"weather-nav\">\r\n\t\t<nav>{value}</nav>\r\n\t</div>\r\n);\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nconst Entry = (props) => (\r\n\t<div className=\"entry\">\r\n\t\t<input\r\n\t\t\tplaceholder=\"city name e.g Abuja\"\r\n\t\t\tclassName=\"search_box\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tonChange={props.handleChange}\r\n\t\t />\r\n\t\t<button \r\n\t\t\tonClick={props.handleClick} \r\n\t\t\tclassName=\"btn-search\">search</button>\r\n\t</div>\r\n);\r\n\r\nexport default Entry;","import React from 'react';\r\nimport Loading from './loading_img.gif';\r\n\r\n\r\nconst LoadingIcon = () => ( \r\n\t<div className=\"loading-icon\">\r\n\t\t<img src={Loading} alt=\"loading...\" className=\"load_img\" /> \r\n\t</div>\r\n);\r\n\r\nexport default LoadingIcon;","import React from 'react';\r\n\r\nconst Day = ({day}) => (\r\n\t<div className=\"day\">{day}</div>\r\n);\r\nexport default Day;","import React from 'react';\r\n\r\nconst Icon = ({icon}) => (\r\n\t<div>\r\n\t\t<img src={`http://openweathermap.org/img/w/${icon}.png`}  alt=\"weather_icon\" />\r\n\t</div>\r\n);\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nconst Location = ({location}) => ( \r\n<div className=\"weath-location\">\r\n\t<h3>{location}</h3>\r\n</div>\r\n);\r\n\r\n\r\nexport default Location;","import React from 'react';\r\nconst Overlay = () => (\r\n\t<div className=\"text-cont\">\r\n\t\t<div className=\"text\"> click for more </div>\r\n\t</div>\r\n);\r\nexport default Overlay;","import React from 'react';\r\n\r\nconst TempMax = ({temp}) => (\r\n\t<span className=\"temp-max\">{temp}&#176;</span>\r\n);\r\nexport default TempMax;","import React from 'react';\r\n\r\nconst TempMin = ({temp}) => (\r\n\t<span className=\"temp-min\">{temp}&#176;</span>\r\n);\r\n\r\nexport default TempMin;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Day from './day';\r\nimport Icon from './icon';\r\nimport Location from './location';\r\nimport Overlay from './overlay';\r\nimport TempMax from './tempmax';\r\nimport TempMin from './tempmin';\r\n\r\nconst WeatherDisplay = (props) => { \r\n\t\r\n///multiply timestamp(day) by 1000(milliseconds) \r\n//handles timestamp conversion to day\r\n\tconst handleDay = (day) => {\r\n\t\tlet days =  ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\t\tlet d = new Date(day * 1000); //to get the date time\r\n\t\tlet dayName = days[d.getDay()]; //gets day using index equivalence from days array\r\n\t\treturn dayName;\t\r\n\t} \r\n\r\n\treturn( \r\n\t<div className=\"weath-disp\">\r\n\t\t<Location  location={props.location} />\r\n\t\t<ul className=\"weath-disp-list\">\r\n\t\t\t{\r\n\t\t\tprops.reports.filter((report, i) => i % 8 === 0)\r\n\t\t\t.map(report => ( \r\n\t\t\t\t<Link to={`/${handleDay(report.dt)}`}>\r\n\t\t\t\t\t<li key={report.dt} className=\"weather-item\">\r\n\t\t\t\t\t\t<Day day={handleDay(report.dt)} />\r\n\t\t\t\t\t\t<Icon icon={report.weather[0].icon} />\r\n\t\t\t\t\t\t<TempMax temp={report.main.temp_max} />\r\n\t\t\t\t\t\t<TempMin temp={report.main.temp_min} />\r\n\t\t\t\t\t\t<Overlay />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</Link>\r\n\t\t\t\t))\r\n\t\t\t}\t\r\n\t\t</ul>\r\n\t</div>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\nexport default WeatherDisplay;","import React from 'react';\r\n\r\nconst DetDay = ({det_day}) => ( \r\n<div className=\"day-name\">\r\n\t<h4>{det_day}</h4>\r\n</div>\r\n)\r\nexport default DetDay;","import React from 'react';\r\n\r\nconst Description = ({desc}) => ( \r\n\t<div className=\"weather_desc\">{desc}</div>\r\n);\r\n\r\nexport default Description;","import React from 'react';\r\n\r\nconst Time = ({time}) => (\r\n\t<div className=\"det-time\">{time}</div>\r\n);\r\n\r\nexport default Time;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Return = () => ( \r\n\t<div className=\"ret-btn-cont\">\r\n\t\t<Link to='/'>\r\n\t\t\t<button className=\"return-btn\"> Return to home page </button>\r\n\t\t</Link>\r\n\t</div>\r\n);\r\n\r\nexport default Return;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Day from './day';\r\nimport DetDay from './det-day';\r\nimport Description from './description';\r\nimport Time from './time';\r\nimport Icon from './icon';\r\nimport LoadingIcon from './loading_icon';\r\nimport Location from './location';\r\nimport Return from './return';\r\nimport TempMax from './tempmax';\r\nimport TempMin from './tempmin';\r\n\r\n\r\nconst API_KEY = \"e102cc873d6623291973f74bc86a9d13\";\r\n\r\n class WeatherDetail extends React.Component{\r\n \tconstructor(props){\r\n \t\tsuper(props);\r\n\r\n \t\tthis.state = {\r\n \t\t\tdata: [],\r\n \t\t\tdetails: [],\r\n \t\t\tloading: false,\r\n \t\t\tdayName: \"\",\r\n \t\t\tdateTime: \"\",\r\n \t\t\tminTemp: \"\",\r\n \t\t\tmaxTemp: \"\",\r\n \t\t\ticon: \"\",\r\n \t\t\tweathDesc: \"\",\r\n \t\t\tid: \"\"\r\n \t\t}\r\n \t\t\r\n \t}\r\n\r\n\t// Fetch data from API when component mounts\r\n  \tcomponentDidMount(){\r\n\t\tthis.setState({ loading: true }, () => {\r\n\t\t\taxios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.props.data}&appid=${API_KEY}&units=metric`)\r\n\t\t\t\t.then( response => { \r\n\t\t\t\t\tconst data = response.data.list;\r\n\t\t\t\t\tthis.setState({ data, loading: false }); \r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t\tloop through API response stored in data array,\tfor every array element, \r\n\t\t\t\t\t\tconvert data.dt item into its day equivalent.\r\n\t\t\t\t\t\tIf resulting day(name) matches the props day(day of item clicked), \r\n\t\t\t\t\t\tIts matching information is stored in state.\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tconst details = [];\r\n\t\t\t\t\tlet dateTime, maxTemp, minTemp, icon, weathDesc, id, str;\r\n\t\t\t\t\tfor (let i = 0; i < this.state.data.length; i++) {\r\n\t\t\t\t\t\t\tlet days =  ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n\t\t\t\t\t\t\tlet d = new Date(this.state.data[i].dt * 1000); //to get the date time\r\n\t\t\t\t\t\t\tlet dayName = days[d.getDay()]; //gets day using index equivalence from days array\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(dayName === this.props.match.params.nameOfDay){\r\n\r\n\t\t\t\t\t\t\t\tstr = this.state.data[i].dt_txt\r\n\t\t\t\t\t\t\t\tdateTime = str.substr(11,8);  //extracts the next 8 character starting from the 11th char.\r\n\t\t\t\t\t\t\t\tmaxTemp = this.state.data[i].main.temp_max;\r\n\t\t\t\t\t\t\t\tminTemp  = this.state.data[i].main.temp_min;\r\n\t\t\t\t\t\t\t\ticon = this.state.data[i].weather[0].icon;\r\n\t\t\t\t\t\t\t\tweathDesc = this.state.data[i].weather[0].description;\r\n\t\t\t\t\t\t\t\tid = this.state.data[i].dt;\r\n\r\n\t\t\t\t\t\t\t\tdetails.push({dayName, dateTime, maxTemp, minTemp, icon, weathDesc});\r\n\t\t\t\t\t\t\t\tthis.setState({ details });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\r\n\r\n\r\n\t\t\t\t}).catch( error => console.log(error)\t);\r\n  \t\r\n  \t});\r\n\r\n}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"weather-detail\">\r\n\t\t\t\t<Location  location={this.props.location} />\r\n\t\t\t\t<DetDay  det_day={this.props.match.params.nameOfDay} />\r\n\t\t\t\t{ this.state.loading ? <LoadingIcon /> :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ul className=\"row\">\r\n\t\t\t\t\t{ this.state.details.map(detail => ( \r\n\t\t\t\t\t\t<li key={detail.id} className=\"col-md-3\">\r\n\t\t\t\t\t\t\t<Time time={`Time: ${detail.dateTime}`} />\r\n\t\t\t\t\t\t\t<Icon  icon={detail.icon} />\r\n\t\t\t\t\t\t\t<TempMin temp={`Min_Temp: ${detail.minTemp}`} /><br/>\r\n\t\t\t\t\t\t\t<TempMax temp={`Max_Temp: ${detail.maxTemp}`} />\r\n\t\t\t\t\t\t\t<Description desc={`Desc: ${detail.weathDesc}`} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t</ul> \r\n\t\t\t\t\t<Return />\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t\t\t\r\n\t}\r\n}\r\n\r\nexport default WeatherDetail;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import PropTypes from 'prop-types';\nimport axios from 'axios';\nimport './index.css';\nimport Nav from './nav';\nimport Entry from './entry.js';\nimport LoadingIcon from './loading_icon';\nimport WeatherDisplay from './weatherdisplay';\nimport WeatherDetail from './WeatherDetail';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n\n\nconst API_KEY = \"e102cc873d6623291973f74bc86a9d13\";\n\nclass WeatherForecast extends React.Component{\n\n\nconstructor(props){\n\tsuper(props);\n\n\tthis.state = {\n\t\tdata : \"\",\n\t\tlocation: \"\",\n\t\treports : [],\n\t\tloading : false\n\t}\n\tthis.handleChange = this.handleChange.bind(this);\n\tthis.handleClick = this.handleClick.bind(this);\n\n}\nhandleChange(event){\n\t\tconst target = event.target;\n\t\tconst data = target.value; //gets value of the textbox \n\t\tthis.setState({ data });\n}\nhandleClick(){\n\t\tif(this.state.data === \"\"){\n\t\t\treturn;\n\t\t}else{\n\t\t\tthis.setState({ loading: true }, () =>{\n\t\t\taxios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${this.state.data}&appid=${API_KEY}&units=metric`)\n\t\t.then(response  => { \n\t\t\tconst reports = response.data.list;\n\t\t\tconst more_info = response.data.city;\n\t\t\tthis.setState({ \n\t\t\t\tloading: false, \t\t\t\t\n\t\t\t\tlocation: more_info.name,\n\t\t\t\treports\n\t\t\t\t});\n\t\t\t})\n\t\t.catch( error => console.log(error)\t);\n\t});\n\t\t}\n}\n\n\n\trender(){\n\t\treturn(\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"weather-forecast\">\n\t\t\t\t\t\t<Nav value={\"Weather Forecast\"} />\n\t\t\t\t\t\t<Entry \n\t\t\t\t\t\t \t\thandleChange={this.handleChange} \n\t\t\t\t\t\t \t\thandleClick={this.handleClick} />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t this.state.loading ? <LoadingIcon /> :\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact \n\t\t\t\t\t\t\t\t\trender={(props) => <WeatherDisplay {...props} \n\t\t\t\t\t\t\t\t\tlocation={this.state.location}   \n\t\t\t\t\t\t\t\t\treports={this.state.reports} /> }  />\n\n\t\t\t\t\t\t\t<Route path=\"/:nameOfDay\" \n\t\t\t\t\t\t\t\t\trender={(props) =>  <WeatherDetail {...props} \n\t\t\t\t\t\t\t\t\tdata={this.state.data} \n\t\t\t\t\t\t\t\t\tlocation={this.state.location} />} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</Router>\n\t\t);\n\t}\n}\n\n\nReactDOM.render(<WeatherForecast />, document.getElementById('root'));"],"sourceRoot":""}